{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kapetan Mixalis\\\\ReactApps\\\\route-app\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEvent = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEvent;\nexport default NewEvent;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"locahost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Kapetan Mixalis/ReactApps/route-app/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\"\r\n\r\nconst NewEvent = () => {\r\n    return <EventForm />\r\n};\r\n\r\nexport default NewEvent;\r\n\r\nexport async function action({request, params}){\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title:       data.get(\"title\"),\r\n        image:       data.get(\"image\"),\r\n        date:        data.get(\"date\"),\r\n        description: data.get(\"description\")\r\n    }\r\n\r\n    const response = await fetch(\"locahost:8080/events\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if(!response.ok){\r\n        throw json({message:\"Could not save event\"},{status: 500});\r\n    }\r\n\r\n    return redirect(\"/events\");\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxB,CAAC;AAACC,EAAA,GAFIL,QAAQ;AAId,eAAeA,QAAQ;AAEvB,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAQH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAC9BC,KAAK,EAAQL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAC9BE,IAAI,EAASN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IAC7BG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAC;IAChDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM9B,IAAI,CAAC;MAAC+B,OAAO,EAAC;IAAsB,CAAC,EAAC;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC9D;EAEA,OAAO/B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAS,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}