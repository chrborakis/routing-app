{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kapetan Mixalis\\\\ReactApps\\\\route-app\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.js\",\n  _s = $RefreshSig$();\nimport { defer, json, redirect, useRouteLoaderData, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailsPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: data.event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailsPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return defer({\n      event: loadEvent(id),\n      events: loadEvents()\n    });\n  }\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const response = await fetch(\"http://localhost:8080/events/\" + params.eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["defer","json","redirect","useRouteLoaderData","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","event","events","children","resolve","loadedEvent","data","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["C:/Users/Kapetan Mixalis/ReactApps/route-app/frontend/src/pages/EventDetailsPage.js"],"sourcesContent":["import { defer, json, redirect, useRouteLoaderData,Await } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nconst EventDetailsPage = () => {\r\n    const {event, events} = useRouteLoaderData(\"event-detail\");\r\n\r\n    return <>\r\n        <Await resolve={event}>\r\n            {loadedEvent => <EventItem event={data.event} />}\r\n        </Await>\r\n        <Await resolve={events}>\r\n            {loadedEvents => <EventsList />}\r\n        </Await>\r\n    </>\r\n};\r\n\r\nexport default EventDetailsPage;\r\n\r\nasync function loadEvent(id){\r\n    const response = await fetch(\"http://localhost:8080/events/\"+id);\r\n\r\n    if( !response.ok){\r\n        throw json({message:\"Could not fetch details for selected event\"}, {status:500});\r\n    }else{\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}\r\n\r\nasync function loadEvents(){\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n            {message:\"Could not fetch events.\"}, \r\n            {status: 500}\r\n        );\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}\r\n\r\nexport async function loader({ request, params}){\r\n    const id = params.eventId;\r\n    \r\n    const response = await fetch(\"http://localhost:8080/events/\"+id);\r\n\r\n    if( !response.ok){\r\n        throw json({message:\"Could not fetch details for selected event\"}, {status:500});\r\n    }else{\r\n        return defer({\r\n            event:  loadEvent(id),\r\n            events: loadEvents()\r\n        });\r\n    }\r\n}\r\n\r\nexport async function action({params,request}){\r\n    const response = await fetch(\"http://localhost:8080/events/\"+params.eventId, {\r\n        method: request.method\r\n    });\r\n\r\n    if( !response.ok){\r\n        throw json({message:\"Could not delete event\"}, {status:500});\r\n    }\r\n    \r\n    return redirect(\"/events\");\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}