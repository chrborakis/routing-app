{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kapetan Mixalis\\\\ReactApps\\\\route-app\\\\frontend\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-details\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetails, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetails;\nexport default EventDetails;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetails","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Kapetan Mixalis/ReactApps/route-app/frontend/src/pages/EventDetails.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetails = () => {\r\n    const data = useRouteLoaderData(\"event-details\");\r\n\r\n    return <>\r\n        <EventItem event={data.event} />\r\n    </>\r\n};\r\n\r\nexport default EventDetails;\r\n\r\nexport async function loader({ request, params}){\r\n    const id = params.eventId;\r\n    \r\n    const response = await fetch(\"http://localhost:8080/events/\"+id);\r\n\r\n    if( !response.ok){\r\n        throw json({message:\"Could not fetch details for selected event\"}, {status:500});\r\n    }else{\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,eAAe,CAAC;EAEhD,oBAAOG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACHN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBACjC;AACP,CAAC;AAACP,EAAA,CANID,YAAY;EAAA,QACDN,kBAAkB;AAAA;AAAAe,EAAA,GAD7BT,YAAY;AAQlB,eAAeA,YAAY;AAE3B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC3C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAEhE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAC;IACb,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAC;IAA4C,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACpF,CAAC,MAAI;IACD,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}