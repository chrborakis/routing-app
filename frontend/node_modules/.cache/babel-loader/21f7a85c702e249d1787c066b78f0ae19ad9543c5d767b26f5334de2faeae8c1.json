{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kapetan Mixalis\\\\ReactApps\\\\route-app\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EventNavigation from \"./components/EventNavigation\";\nimport MainNavigation from \"./components/MainNavigation\";\nimport Events from \"./pages/Events\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EventDetails from \"./pages/EventDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"\",\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 26\n  }, this),\n  children: [{\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this)\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 40\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EventNavigation","MainNavigation","Events","NewEvent","EventDetails","jsxDEV","_jsxDEV","router","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["C:/Users/Kapetan Mixalis/ReactApps/route-app/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {RouterProvider, createBrowserRouter} from \"react-router-dom\"\n\nimport EventNavigation from \"./components/EventNavigation\";\nimport MainNavigation from \"./components/MainNavigation\";\n\nimport Events from \"./pages/Events\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EventDetails from \"./pages/EventDetails\";\n\nconst router = createBrowserRouter([\n    { path: \"\", element: <Home/>, children:[\n      { path: \"events\", element: <EventNavigation/>, children:[\n          { path: \"\", element: < Events/>},\n          { path: \"new\", element: < NewEvent/>},\n          { path: \":eventId\", element: < EventDetails/>},\n      ]}\n    ]},\n]);\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AAEpE,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AAExD,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CAC/B;EAAES,IAAI,EAAE,EAAE;EAAEC,OAAO,eAAEH,OAAA,CAACI,IAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;EAAEC,QAAQ,EAAC,CACrC;IAAEP,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACN,eAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IAAEC,QAAQ,EAAC,CACpD;MAAEP,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAEH,OAAA,CAAEJ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EAChC;MAAEN,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAAEH,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACrC;MAAEN,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAAEF,YAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC;EACjD,CAAC;AACH,CAAC,CACL,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACR,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAC1C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}